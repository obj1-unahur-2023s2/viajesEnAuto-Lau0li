import remiseras.*
import clientes.*

describe "testing de anaMaria" {

test "ana maria esta economicamente estable" {

	assert.that(ana.estaEstable())

}

test "precio kilometro economicamente estable"{
	assert.equals(30, ana.precioPorKilometro())
}

test "precio kilometro  NO economicamente estable"{
	ana.cambiar()
	assert.equals(25, ana.precioPorKilometro())
}

test "ana maria cambiar" {
	
	ana.cambiar()
	assert.notThat(ana.estaEstable())

}
}

describe "testing de teresa"{
	
	test "precio kilometro 22"{
		
		assert.equals(22, teresa.precioPorKilometro())
	}
	
	test "precio kilometro 32"{
		
		teresa.precioPorKilometro(32)
		assert.equals(32, teresa.precioPorKilometro())
		
	}
}

describe "testing de roxana"{
	test "cobra 180 a ludmila en 10 kilometros"{
		assert.equals(180, roxana.precioPorViaje(10, ludmila))
	}
	test "cobra 36 a ludmila en 2 kilometros"{
		assert.equals(36, roxana.precioPorViaje(2, ludmila))
	}
}

describe "testing de gabriela"{
	test "cobra 216 a ludmila en 10 kilometros"{
		assert.equals(216, gabriela.precioPorViaje(10, ludmila))
	}
	test "cobra 43.20 a ludmila en 2 kilometros"{
		assert.equals(43.20, gabriela.precioPorViaje(2, ludmila))
	}
}
describe "testing de mariela"{
	test "cobra 180 a ludmila en 10 kilometros"{
		assert.equals(180, mariela.precioPorViaje(10, ludmila))
	}
	test "cobra 50 a ludmila en 2 kilometros"{
		assert.equals(50, mariela.precioPorViaje(2, ludmila))
	}
	test "cobra 60 a ana en 2 kilometros"{
		assert.equals(60, mariela.precioPorViaje(2, ana))
	}
}
describe "testing de juana"{
	test "cobra 100 a ludmila en 2 kilometros"{
		assert.equals(100, juana.precioPorViaje(2, ludmila))
	}
	test "cobra 200 a ludmila en 8 kilometros"{
		assert.equals(200, juana.precioPorViaje(10, ludmila))
	}
}